/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_marvel;

import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author ANDY ESCOBAR 007
 */
public final class GameStratego extends javax.swing.JFrame implements ActionListener{
    
    
    //private static ImageIcon villano;
    //Si turno es true entonces toca el turno del jugador 1 "HEREO" y si es 
    //falso es el turno del jugador 2 "VILLANO
   // public static boolean turno=true;
    
    CasillasMarvel celda[][]=new CasillasMarvel[10][10];
    CasillasMarvel btn1,btn2;
    CasillasMarvel primerCasilla=null,segundaCasilla=null;
    boolean turnplayerHeore=true, primerclic=false;
    int cVillanosR1=0,cVillanosR2=0,cVillanosR3=0,cVillanosR4=0,cVillanosR5=0;
    int cVillanosR6=0,cVillanosR7=0,cVillanosR8=0,cVillanosR9=0,cVillanosR10=0;
    
    
    int cHeroesR1=0,cHeroesR2=0,cHeroesR3=0,cHeroesR4=0,
       cHeroesR5=0,cHeroesR6=0,cHeroesR7=0,cHeroesR8=0,cHeroesR9=0,cHeroesR10=0;
    
    
    int pActualX=0,pActualY=0, pNewX=0,PNewY=0;
    
    
    
    
    /**
     * Creates new form GameStratego
     */
    public GameStratego() {
        /* 
        this.setUndecorated(true); Remueve la barra "Hace que no podas cerrar la
                                   ventana con la x o que la podas mover.
        
        */
        
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);
        
        
        
        
        //Full Screen
        //Toolkit tk = Toolkit.getDefaultToolkit();
        
        ///int xSize = (int) tk.getScreenSize().getWidth();
        //int ySize = (int) tk.getScreenSize().getHeight();
        
        //this.setSize(xSize,ySize);
        //Cierre de full Screen
        
        panelTablero.setSize(500, 700);
        
        tablero();
  
       
        
        //OcultarVillanos();
       // villano = getImage("/src/Imagenes/cardsVillain.png");
    }
    
    
    public void tablero(){
 
        panelTablero.setLayout(new GridLayout(10,10));
        for (int i=0;i<celda.length;i++ ){
            for (int e=0;e<celda[i].length;e++){
                
                celda[i][e]=new CasillasMarvel(i, e, null);
                celda[i][e].setName(i+""+e);
                celda[i][e].addActionListener(this);
                
                panelTablero.add(celda[i][e]);
            }
        }
    }
    

    
   
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTablero = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1080, 680));

        panelTablero.setName("panelTablero"); // NOI18N
        panelTablero.setPreferredSize(new java.awt.Dimension(530, 530));

        javax.swing.GroupLayout panelTableroLayout = new javax.swing.GroupLayout(panelTablero);
        panelTablero.setLayout(panelTableroLayout);
        panelTableroLayout.setHorizontalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );
        panelTableroLayout.setVerticalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Player 1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Player 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                .addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(325, 325, 325)
                        .addComponent(jLabel2)
                        .addGap(203, 203, 203))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameStratego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameStratego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameStratego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameStratego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GameStratego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel panelTablero;
    // End of variables declaration//GEN-END:variables

    private static ImageIcon getImage(String path)
   {
      try
      {
         
         Image image = ImageIO.read(GameStratego.class.getResource(path));
         Image image_resize = image.getScaledInstance(55, 55, Image.SCALE_SMOOTH);
         return new ImageIcon(image_resize);
      } catch (IOException e)
      {
         e.printStackTrace();
      }
      return null;
   }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(turnplayerHeore){
          
            if(primerclic){
                if(e.getSource() instanceof CasillasMarvel){
                    for (CasillasMarvel[] celda1 : celda) {
                        for (CasillasMarvel objeto : celda1) {
                            if (e.getSource().equals(objeto)) {
                                if(primerCasilla.equals(objeto)){
                                    JOptionPane.showMessageDialog(null,"Usted a hecho clic en la misma cordenada");
                                }else{
                                System.out.println("Segundo Clic\n"+objeto.x+""+objeto.y);
                                segundaCasilla=objeto;
                                primerclic=false;
                                validarMovimiento(primerCasilla,segundaCasilla);
                                }
                            }
                        }
                    }
                }
            }
            else{
                primerclic=true;
                if(e.getSource() instanceof CasillasMarvel){
                    for (CasillasMarvel[] celda1 : celda) {
                        for (CasillasMarvel objeto : celda1) {
                            if (e.getSource().equals(objeto)) {
                                System.out.println("Primer Clic");
                                System.out.println(objeto.x+""+objeto.y);
                               primerCasilla= objeto;
                            }
                        }
                    }
                }
                
            }
        }
        else{
            turnplayerHeore=true;
            
        }
            
    }

    private void validarMovimiento(CasillasMarvel primerCasilla, CasillasMarvel segundaCasilla) {
        if(primerCasilla.ficha!=null){
            if(segundaCasilla.ficha == null|| segundaCasilla.ficha!=primerCasilla.ficha){
                moverPieza(primerCasilla,segundaCasilla);
                
            }
            
        }
    }

    private void moverPieza(CasillasMarvel primerCasilla, CasillasMarvel segundaCasilla) {
        if (primerCasilla.x==segundaCasilla.x){
            int pos=primerCasilla.y;
            if ((pos+1)>=pos||(pos-1)<=pos){
                segundaCasilla.ficha=primerCasilla.ficha;
                primerCasilla.ficha=null;
            }  
        }else if(primerCasilla.y==segundaCasilla.y){
            int pos=primerCasilla.x;
            if ((pos+1)>=pos||(pos-1)<=pos){
                segundaCasilla.ficha=primerCasilla.ficha;
                primerCasilla.ficha=null;
            }
        }
            JOptionPane.showConfirmDialog(null, "Movimiento no valido, porfavor intenete de nuevo");
    }
}


        



